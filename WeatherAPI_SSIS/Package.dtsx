<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/24/2023 11:40:33 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RHYS-DESKTOP"
  DTS:CreatorName="RHYS-DESKTOP\derhy"
  DTS:DTSID="{EF20E91B-E676-4268-B6DB-3123EDB3645D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.948.0"
  DTS:LocaleID="3081"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="95"
  DTS:VersionGUID="{D9D99404-424E-4B92-AA7F-4C1CCF62DF97}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConditionError]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{D43B115C-4724-450E-B458-BD1CEB929CE0}"
      DTS:ObjectName="ConditionError">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="3081"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Test\ConditionError.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{C98CAAC6-EEF0-4977-A46E-CB483E33C4A1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 1"
              DTS:DTSID="{79C4BD6D-8830-4702-B69E-43918B853E65}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 2"
              DTS:DTSID="{6B572460-408A-4456-B06F-7FF6BC9109D5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 3"
              DTS:DTSID="{49606B40-F62B-48FA-829A-964B3C953090}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 4"
              DTS:DTSID="{850EC1C7-CD7F-42E9-B017-332E761EEFA8}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocationError]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{626950FB-586E-4CBB-B084-1B6DE5AFE73F}"
      DTS:ObjectName="LocationError">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="3081"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Test\LocationError.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="name"
              DTS:DTSID="{447BF1F8-C28C-48BD-B60A-45F6B2F848D5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="region"
              DTS:DTSID="{F0AE0BA6-9675-430D-B3BA-40D8EE6DD0A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="150"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country"
              DTS:DTSID="{6BB23449-A63E-462B-8011-A2B02F2F24D6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="4"
              DTS:TextQualified="True"
              DTS:ObjectName="longitude"
              DTS:DTSID="{07E3C800-B6B5-4345-AA7D-1B12EC288DAE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="4"
              DTS:TextQualified="True"
              DTS:ObjectName="lattitude"
              DTS:DTSID="{E533ED2D-D11F-4C7D-B7A9-0A6B2CF62BF6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="250"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="location_lookup"
              DTS:DTSID="{2F0BDEAE-9F00-4827-B533-E4C339F7CA0B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{D6D1C8AF-DDC5-4B1A-B9E4-6D82CCD1B395}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{BE72952D-E8BB-46A0-BF6B-86F7B7FB6904}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2BCFBC58-74F5-44F4-8B5F-BA0B61E54954}"
      DTS:ObjectName="zotac.WeatherAPI_DW.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=zotac;User ID=sa;Initial Catalog=WeatherAPI_DW;Provider=SQLNCLI11.1;Persist Security Info=True;Application Name=SSIS-Package-{2BCFBC58-74F5-44F4-8B5F-BA0B61E54954}zotac.WeatherAPI_DW.sa;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAADdAGA49NKEmel3qMiIB3UAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAA7L6FkjHhS4zWyJmPEjEjcYmX8h2Hn11Q/EmoVbYSl/AAAAAAOgAAAAAIAACAAAACIucJjSMZFrOjc2mbhTReDJfgRleM7HDH7CQLE4k6p/iAAAAD3iEok8dQdbIluujIPwHAFMy9eO/Q6burgB7XLF46nbEAAAAAbpGDGsbLmKlD+1W3qGjR7r0WSFqpygXV8er+6cruN7oEbpzLBBnQio/0oYFT+mtVpJJUijv7Xf59yb+tn+Hpz</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{37A4A25B-167E-424E-A743-1DFA7D687494}"
      DTS:ObjectName="APIKey">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">760ac62a1bd44f338ee134814232402</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9D211568-6D31-4AFE-819D-A8F98B1973F4}"
      DTS:ObjectName="APIUrl">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">http://api.weatherapi.com/v1/current.json?key={APIKey}&amp;q={WeatherLocation}&amp;aqi=no</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2285898F-FE6F-40AD-926D-BEDCEAD253EB}"
      DTS:ObjectName="FullAPIKey"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">http://api.weatherapi.com/v1/current.json?key=760ac62a1bd44f338ee134814232402&amp;q=Darwin&amp;aqi=no</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{EB4E1FCA-CECB-464E-B5F5-8A5E9D7FAC9C}"
      DTS:ObjectName="TempFileLocation"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\Test\TempData</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{656C2070-17E3-4112-B217-DF132038284C}"
      DTS:ObjectName="WeatherLocation">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Darwin</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{075E302B-FDE8-45B8-8FE4-85C1D0EF97C6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentWeatherObservation">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get latest weather data and check for new values"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{94D60DF9-D88C-4E3E-91EB-7E79B96F9F74}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get latest weather data and check for new values">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get latest weather data and check for new values\Check existing condition"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check existing condition"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[dimCondition]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[dimCondition]) [refTable]
where [refTable].[condition_id] = ? and [refTable].[icon] = ? and [refTable].[text] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="condition_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="text" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="icon" dataType="DT_WSTR" length="150" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[code]};#{Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[icon]};#{Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[text]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get latest weather data and check for new values\Check existing condition.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input].Columns[code]"
                      cachedDataType="i4"
                      cachedName="code"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[code]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">condition_id</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input].Columns[icon]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="icon"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[icon]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">icon</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input].Columns[text]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="text"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[text]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">text</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Match Output].Columns[condition_id]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Match Output].Columns[condition_id]"
                      name="condition_id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">condition_id</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\Check existing location"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check existing location"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[dimLocation]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[dimLocation]) [refTable]
where [refTable].[location_lookup] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="location_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="name" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="region" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="country" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="lattitude" dataType="DT_NUMERIC" length="0" precision="18" scale="0" codePage="0"/&gt;&lt;referenceColumn name="longitude" dataType="DT_NUMERIC" length="0" precision="18" scale="0" codePage="0"/&gt;&lt;referenceColumn name="location_lookup" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[location_lookup]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get latest weather data and check for new values\Check existing location.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Check existing location.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing location.Inputs[Lookup Input].Columns[location_lookup]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="location_lookup"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[location_lookup]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">location_lookup</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Check existing location.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Check existing location.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Check existing location.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\Raw File Destination"
              componentClassID="Microsoft.RawDestination"
              contactInfo="Writes raw data that will not require parsing or translation. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers.;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Writes raw data that will not require parsing or translation. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers."
              name="Raw File Destination"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the file."
                  name="AccessMode"
                  typeConverter="AccessMode">1</property>
                <property
                  dataType="System.Null"
                  description="Output file name"
                  name="FileName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.NonValidatingFileNameEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
                <property
                  dataType="System.String"
                  description="Name of the variable that contains the file name"
                  name="FileNameVariable">$Package::TempFileLocation</property>
                <property
                  dataType="System.Int32"
                  description="Indicates what option is used to write to the file."
                  name="WriteOption"
                  typeConverter="WriteOption">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input]"
                  hasSideEffects="true"
                  name="Raw File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[Location]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Location"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Location]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[Region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Region"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Region]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[Country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Country"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Country]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[Longitude]"
                      cachedDataType="decimal"
                      cachedName="Longitude"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[Lattitude]"
                      cachedDataType="decimal"
                      cachedName="Lattitude"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Lattitude]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[ObservationDateTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ObservationDateTime"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[ObservationDateTime]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[TempC]"
                      cachedDataType="decimal"
                      cachedName="TempC"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[TempC]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[ConditionCode]"
                      cachedDataType="i4"
                      cachedName="ConditionCode"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[ConditionCode]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[Humidity]"
                      cachedDataType="numeric"
                      cachedName="Humidity"
                      cachedPrecision="18"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Humidity]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[CloudCoverage]"
                      cachedDataType="numeric"
                      cachedName="CloudCoverage"
                      cachedPrecision="18"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[CloudCoverage]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[FeelsLikeC]"
                      cachedDataType="decimal"
                      cachedName="FeelsLikeC"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[FeelsLikeC]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[UV]"
                      cachedDataType="decimal"
                      cachedName="UV"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[UV]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[LocationLookup]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="LocationLookup"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[LocationLookup]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input].Columns[APICallDateTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="APICallDateTime"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[APICallDateTime]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\Save failed condition rows"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="3081"
              name="Save failed condition rows"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get latest weather data and check for new values\Save failed condition rows.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[ConditionError]"
                  connectionManagerRefId="Package.ConnectionManagers[ConditionError]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].Columns[code]"
                      cachedDataType="i4"
                      cachedName="code"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[code]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].Columns[icon]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="icon"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 1]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[icon]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].Columns[text]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="text"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 2]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[text]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 3]"
                      lineageId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 4]"
                      lineageId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                      dataType="i4"
                      name="Column 0" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 1]"
                      dataType="wstr"
                      length="150"
                      name="Column 1" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 2]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="Column 2" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 3]"
                      dataType="i4"
                      name="Column 3" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input].ExternalColumns[Column 4]"
                      dataType="i4"
                      name="Column 4" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\Save failed location rows"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="3081"
              name="Save failed location rows"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get latest weather data and check for new values\Save failed location rows.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocationError]"
                  connectionManagerRefId="Package.ConnectionManagers[LocationError]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[name]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="name"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[name]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[name]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="region"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[region]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[region]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="country"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[country]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[country]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[longitude]"
                      cachedDataType="numeric"
                      cachedName="longitude"
                      cachedPrecision="4"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[longitude]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[longitude]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[lattitude]"
                      cachedDataType="numeric"
                      cachedName="lattitude"
                      cachedPrecision="4"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[lattitude]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[lattitude]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[name]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[country]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="country" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[longitude]"
                      dataType="numeric"
                      name="longitude"
                      precision="4" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[lattitude]"
                      dataType="numeric"
                      name="lattitude"
                      precision="4" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input].ExternalColumns[location_lookup]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      name="location_lookup" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\Save new condition"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Save new condition"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[dimCondition]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get latest weather data and check for new values\Save new condition.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].Columns[code]"
                      cachedDataType="i4"
                      cachedName="code"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].ExternalColumns[condition_id]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[code]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].Columns[icon]"
                      cachedDataType="wstr"
                      cachedLength="150"
                      cachedName="icon"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].ExternalColumns[icon]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[icon]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].Columns[text]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="text"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].ExternalColumns[text]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[text]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].ExternalColumns[condition_id]"
                      dataType="i4"
                      name="condition_id" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].ExternalColumns[text]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="text" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input].ExternalColumns[icon]"
                      dataType="wstr"
                      length="150"
                      name="icon" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\Save new location"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Save new location"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[dimLocation]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get latest weather data and check for new values\Save new location.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].Columns[name]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="name"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[name]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].Columns[region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="region"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[region]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[region]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].Columns[country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="country"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[country]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].Columns[longitude]"
                      cachedDataType="numeric"
                      cachedName="longitude"
                      cachedPrecision="4"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[longitude]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[longitude]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].Columns[lattitude]"
                      cachedDataType="numeric"
                      cachedName="lattitude"
                      cachedPrecision="4"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[lattitude]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[lattitude]" />
                    <inputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].Columns[location_lookup]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="location_lookup"
                      externalMetadataColumnId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[location_lookup]"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[location_lookup]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[location_id]"
                      dataType="i4"
                      name="location_id" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[name]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[country]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="country" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[lattitude]"
                      dataType="numeric"
                      name="lattitude"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[longitude]"
                      dataType="numeric"
                      name="longitude"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input].ExternalColumns[location_lookup]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      name="location_lookup" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="WeatherAPI Get Latest"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public WeatherConditionBuffer WeatherConditionBuffer;

    public LocationBuffer LocationBuffer;

    public CurrentWeatherObservationsBuffer CurrentWeatherObservationsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != WeatherConditionBuffer)
        {
            WeatherConditionBuffer.SetEndOfRowset();
            WeatherConditionBuffer = null;
        }

        if (null != LocationBuffer)
        {
            LocationBuffer.SetEndOfRowset();
            LocationBuffer = null;
        }

        if (null != CurrentWeatherObservationsBuffer)
        {
            CurrentWeatherObservationsBuffer.SetEndOfRowset();
            CurrentWeatherObservationsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"WeatherCondition"))
            {
                WeatherConditionBuffer = new WeatherConditionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Location"))
            {
                LocationBuffer = new LocationBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"CurrentWeatherObservations"))
            {
                CurrentWeatherObservationsBuffer = new CurrentWeatherObservationsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String APIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["APIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String APIUrl
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["APIUrl"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullAPIKey
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullAPIKey"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String WeatherLocation
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["WeatherLocation"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Json;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        try
        {
            //string APIUrl = this.Variables.APIUrl.Replace("{WeatherLocation}", this.Variables.WeatherLocation).Replace("APIKey", this.Variables.APIKey);
            string APIUrl = this.Variables.FullAPIKey;
            string userAgent = "Rhys at RhysServAcc@gmail.com";

            //Create connection

            Console.Write(APIUrl);

            System.Net.HttpWebRequest req = System.Net.HttpWebRequest.CreateHttp(APIUrl);

            //Headers

            req.UserAgent = userAgent;


            //Get response

            System.Net.HttpWebResponse resp = (System.Net.HttpWebResponse)req.GetResponse();
            System.IO.MemoryStream ms = new System.IO.MemoryStream();
            resp.GetResponseStream().CopyTo(ms);

            //Load data into buffer


            //Load data into CurrentWeatherObersvation output
            ms.Position = 0; //return to beginning of stream

            //Parse the JSON to matching variables
            CurrentWeatherObservation obs = new CurrentWeatherObservation();

            //deserializer
            DataContractJsonSerializer json = new DataContractJsonSerializer(obs.GetType());
            obs = json.ReadObject(ms) as CurrentWeatherObservation;

            //If the observation data fails, obs will be null
            if (obs != null)
            {
                CurrentWeatherObservationsBuffer.AddRow();
                WeatherConditionBuffer.AddRow();
                LocationBuffer.AddRow();

                //Date

                //Condition
                WeatherConditionBuffer.code = obs.current.condition.code;
                WeatherConditionBuffer.text = obs.current.condition.text;
                WeatherConditionBuffer.icon = obs.current.condition.icon;

                //Location
                LocationBuffer.name = obs.location.name;
                LocationBuffer.region = obs.location.region;
                LocationBuffer.country = obs.location.country;
                LocationBuffer.longitude = obs.location.lon;
                LocationBuffer.lattitude = obs.location.lat;
                LocationBuffer.locationlookup = obs.location.name + "-" + obs.location.region + "-" + obs.location.country;

                //Observation

                CurrentWeatherObservationsBuffer.Location = obs.location.name;
                CurrentWeatherObservationsBuffer.LocationLookup = obs.location.name + "-" + obs.location.region + "-" + obs.location.country;
                CurrentWeatherObservationsBuffer.Region = obs.location.region;
                CurrentWeatherObservationsBuffer.Country = obs.location.country;
                CurrentWeatherObservationsBuffer.Longitude = obs.location.lon;
                CurrentWeatherObservationsBuffer.Lattitude = obs.location.lat;
                CurrentWeatherObservationsBuffer.TempC = obs.current.temp_c;
                CurrentWeatherObservationsBuffer.FeelsLikeC = obs.current.feelslike_c;
                CurrentWeatherObservationsBuffer.ConditionCode = obs.current.condition.code;
                CurrentWeatherObservationsBuffer.Humidity = obs.current.humidity;
                CurrentWeatherObservationsBuffer.CloudCoverage = obs.current.cloud;
                CurrentWeatherObservationsBuffer.UV = obs.current.uv;
                CurrentWeatherObservationsBuffer.ObservationDateTime = DateTime.Parse(obs.current.last_updated);
                CurrentWeatherObservationsBuffer.APICallDateTime = DateTime.Now;
            }

        } 
        catch (Exception ex)
        {
            bool cancel = true;
            this.ComponentMetaData.FireError(50069, "Parse API data", ex.Message, null, 0, out cancel);
        }
    }

}

[DataContract]
public class CurrentWeatherObservation
{
    [DataMember]
    public LocationDetails location { get; set; }

    [DataMember]
    public WeatherDetails current { get; set; }
}


[DataContract]
public class LocationDetails

{
    [DataMember]
    public string name { get; set; }

    [DataMember]
    public string region { get; set; }

    [DataMember]
    public string country { get; set; }

    [DataMember]
    public decimal lat { get; set; }

    [DataMember]
    public decimal lon { get; set; }

}

[DataContract]
public class WeatherDetails
{
    [DataMember]
    public string last_updated { get; set; }

    [DataMember]
        public decimal temp_c { get; set; }

    [DataMember]
    public WeatherCondition condition { get; set; }

    [DataMember]
       public Int16 humidity { get; set; }

    [DataMember]
       public Int16 cloud { get; set; }

    [DataMember]
       public decimal feelslike_c { get; set; }

    [DataMember]
        public decimal uv { get; set; }
}

[DataContract]
public class WeatherCondition
{
    [DataMember]
    public string text { get; set; }
    [DataMember]
    public string icon { get; set; }
    [DataMember]
    public int code { get; set; }


}]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class WeatherConditionBuffer: ScriptBuffer

{
    public WeatherConditionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 code
    {
        set
        {
            this[0] = value;
        }
    }
    public bool code_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String icon
    {
        set
        {
            this[1] = value;
        }
    }
    public bool icon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String text
    {
        set
        {
            this[2] = value;
        }
    }
    public bool text_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class LocationBuffer: ScriptBuffer

{
    public LocationBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String name
    {
        set
        {
            this[0] = value;
        }
    }
    public bool name_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String region
    {
        set
        {
            this[1] = value;
        }
    }
    public bool region_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String country
    {
        set
        {
            this[2] = value;
        }
    }
    public bool country_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal lattitude
    {
        set
        {
            this[4] = value;
        }
    }
    public bool lattitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String locationlookup
    {
        set
        {
            this[5] = value;
        }
    }
    public bool locationlookup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class CurrentWeatherObservationsBuffer: ScriptBuffer

{
    public CurrentWeatherObservationsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Location
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Location_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Region
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Region_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Country
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Country_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Lattitude
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Lattitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime ObservationDateTime
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ObservationDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal TempC
    {
        set
        {
            this[6] = value;
        }
    }
    public bool TempC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ConditionCode
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ConditionCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Humidity
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CloudCoverage
    {
        set
        {
            this[9] = value;
        }
    }
    public bool CloudCoverage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FeelsLikeC
    {
        set
        {
            this[10] = value;
        }
    }
    public bool FeelsLikeC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UV
    {
        set
        {
            this[11] = value;
        }
    }
    public bool UV_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LocationLookup
    {
        set
        {
            this[12] = value;
        }
    }
    public bool LocationLookup_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime APICallDateTime
    {
        set
        {
            this[13] = value;
        }
    }
    public bool APICallDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_77c05679dd8849a9a2df56d08e547619.Properties.Settings.get_Default():SC_77c05679dd8849a9a2df56d08e547619.Properties.Sett" +
    "ings")]

namespace SC_77c05679dd8849a9a2df56d08e547619.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_77c05679dd8849a9a2df56d08e547619.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C662502B-6ACD-41F7-977B-C56E362B54C6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_77c05679dd8849a9a2df56d08e547619</RootNamespace>
    <AssemblyName>SC_77c05679dd8849a9a2df56d08e547619</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_77c05679dd8849a9a2df56d08e547619</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_77c05679dd8849a9a2df56d08e547619</msb:DisplayName>
    <msb:ProjectId>{2C8BEDC8-1DDC-43E0-850D-C662C4D19A9E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_77c05679dd8849a9a2df56d08e547619.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_77c05679dd8849a9a2df56d08e547619")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_77c05679dd8849a9a2df56d08e547619")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_77c05679dd8849a9a2df56d08e547619.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_77c05679dd8849a9a2df56d08e547619.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_77c05679dd8849a9a2df56d08e547619.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_77c05679dd8849a9a2df56d08e547619.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_77c05679dd8849a9a2df56d08e547619.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_77c05679dd8849a9a2df56d08e547619.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAI7g+mMAAAAAAAAAAOAAIiALATAAADQAAAAIAAAAAAAAelIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAChSAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgDIAAAAgAAAANAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA2AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
UgAAAAAAAEgAAAACAAUAfCkAAPQnAAABAAAAAAAAAHBRAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBIAAAoqHgIoEwAACiobMAcAPQMAAAEAABECexMAAARv
bgAABnIBAABwCiUoFAAACigVAAAKJQZvFgAACm8XAAAKdCQAAAFzGAAACgtvGQAACgdvGgAACgcW
am8bAAAKcwkAAAYMCG8cAAAKcx0AAAoHbx4AAAp1AwAAAgwIOawCAAACexYAAARvYgAABgJ7FAAA
BG8yAAAGAnsVAAAEb0IAAAYCexQAAAQIbwcAAAZvGQAABm8oAAAGbywAAAYCexQAAAQIbwcAAAZv
GQAABm8kAAAGbzAAAAYCexQAAAQIbwcAAAZvGQAABm8mAAAGby4AAAYCexUAAAQIbwUAAAZvCgAA
Bm82AAAGAnsVAAAECG8FAAAGbwwAAAZvOAAABgJ7FQAABAhvBQAABm8OAAAGbzoAAAYCexUAAAQI
bwUAAAZvEgAABm88AAAGAnsVAAAECG8FAAAGbxAAAAZvPgAABgJ7FQAABBuNKQAAASUWCG8FAAAG
bwoAAAaiJRdyPQAAcKIlGAhvBQAABm8MAAAGoiUZcj0AAHCiJRoIbwUAAAZvDgAABqIoHwAACm9A
AAAGAnsWAAAECG8FAAAGbwoAAAZvRgAABgJ7FgAABBuNKQAAASUWCG8FAAAGbwoAAAaiJRdyPQAA
cKIlGAhvBQAABm8MAAAGoiUZcj0AAHCiJRoIbwUAAAZvDgAABqIoHwAACm9eAAAGAnsWAAAECG8F
AAAGbwwAAAZvSAAABgJ7FgAABAhvBQAABm8OAAAGb0oAAAYCexYAAAQIbwUAAAZvEgAABm9MAAAG
AnsWAAAECG8FAAAGbxAAAAZvTgAABgJ7FgAABAhvBwAABm8XAAAGb1IAAAYCexYAAAQIbwcAAAZv
HwAABm9aAAAGAnsWAAAECG8HAAAGbxkAAAZvKAAABm9UAAAGAnsWAAAECG8HAAAGbxsAAAYoIAAA
Cm9WAAAGAnsWAAAECG8HAAAGbx0AAAYoIAAACm9YAAAGAnsWAAAECG8HAAAGbyEAAAZvXAAABgJ7
FgAABAhvBwAABm8VAAAGKCEAAApvUAAABgJ7FgAABCgiAAAKb2AAAAbeJQ0XEwQCKCMAAAoglcMA
AHJBAABwCW8kAAAKFBYSBG8lAAAK3gAqAAAAQRwAAAAAAAAAAAAAFwMAABcDAAAlAAAADwAAAR4C
KGUAAAYqHgJ7AQAABCoiAgN9AQAABCoeAnsCAAAEKiICA30CAAAEKh4CKCYAAAoqHgJ7AwAABCoi
AgN9AwAABCoeAnsEAAAEKiICA30EAAAEKh4CewUAAAQqIgIDfQUAAAQqHgJ7BgAABCoiAgN9BgAA
BCoeAnsHAAAEKiICA30HAAAEKh4CewgAAAQqIgIDfQgAAAQqHgJ7CQAABCoiAgN9CQAABCoeAnsK
AAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsAAAQqHgJ7DAAABCoiAgN9DAAABCoeAnsNAAAEKiIC
A30NAAAEKh4Cew4AAAQqIgIDfQ4AAAQqHgJ7DwAABCoiAgN9DwAABCoeAnsQAAAEKiICA30QAAAE
Kh4CexEAAAQqIgIDfREAAAQqKgIDBAUoJwAACio6AhYDjCsAAAEoKAAACipaAywIAhYoKQAACipy
XwAAcHMqAAAKeiYCFwMoKAAACipaAywIAhcoKQAACipyXwAAcHMqAAAKeiYCGAMoKAAACipaAywI
AhgoKQAACipyXwAAcHMqAAAKeh4CKCsAAAoqHgIoLAAACioeAigtAAAKKiYCFgMoKAAACio6AhkD
jBQAAAEoKAAACipaAywIAhkoKQAACipyXwAAcHMqAAAKejoCGgOMFAAAASgoAAAKKloDLAgCGigp
AAAKKnJfAABwcyoAAAp6JgIbAygoAAAKKloDLAgCGygpAAAKKnJfAABwcyoAAAp6OgIbA4wYAAAB
KCgAAAoqOgIcA4wUAAABKCgAAAoqWgMsCAIcKCkAAAoqcl8AAHBzKgAACno6Ah0DjCsAAAEoKAAA
CipaAywIAh0oKQAACipyXwAAcHMqAAAKejoCHgOMFAAAASgoAAAKKloDLAgCHigpAAAKKnJfAABw
cyoAAAp6PgIfCQOMFAAAASgoAAAKKl4DLAkCHwkoKQAACipyXwAAcHMqAAAKej4CHwoDjBQAAAEo
KAAACipeAywJAh8KKCkAAAoqcl8AAHBzKgAACno+Ah8LA4wUAAABKCgAAAoqXgMsCQIfCygpAAAK
KnJfAABwcyoAAAp6KgIfDAMoKAAACipeAywJAh8MKCkAAAoqcl8AAHBzKgAACno+Ah8NA4wYAAAB
KCgAAAoqXgMsCQIfDSgpAAAKKnJfAABwcyoAAAp6fgIoLgAACgICc2oAAAZ9EgAABAICc2sAAAZ9
EwAABCoGKgAAABMwAgBPAAAAAAAAAAJ7FAAABCwSAnsUAAAEbzMAAAYCFH0UAAAEAnsVAAAELBIC
exUAAARvQwAABgIUfRUAAAQCexYAAAQsEgJ7FgAABG9jAAAGAhR9FgAABCoAEzAFAKMAAAACAAAR
Fgo4ggAAAAQGlA4EcvwAAHAoLwAACjMZAgUGmgIEBpQoMAAACg4EcysAAAZ9FAAABAQGlA4Ech4B
AHAoLwAACjMZAgUGmgIEBpQoMAAACg4EczUAAAZ9FQAABAQGlA4EcjABAHAoLwAACjMZAgUGmgIE
BpQoMAAACg4Ec0UAAAZ9FgAABAYXWAoGAz93////Am9pAAAGAm9mAAAGAihnAAAGKjoCKCYAAAoC
A30XAAAEKjoCKCYAAAoCA30YAAAEKpYCexgAAARvMQAACnJmAQBwbzIAAAooMwAACm80AAAKdCkA
AAEqlgJ7GAAABG8xAAAKcnQBAHBvMgAACigzAAAKbzQAAAp0KQAAASqWAnsYAAAEbzEAAApyggEA
cG8yAAAKKDMAAApvNAAACnQpAAABKpYCexgAAARvMQAACnKYAQBwbzIAAAooMwAACm80AAAKdCkA
AAEqrn4ZAAAELR5yuAEAcNANAAACKDUAAApvNgAACnM3AAAKgBkAAAR+GQAABCoafhoAAAQqHgKA
GgAABCoafhsAAAQqHgIoOAAACiouc3UAAAaAGwAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAMBMAACN+AACcEwAAgA8AACNTdHJpbmdzAAAAABwjAAAsAgAAI1VTAEglAAAQ
AAAAI0dVSUQAAABYJQAAnAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAADIA
AAAOAAAAGwAAAHYAAABPAAAAOAAAAFgAAAACAAAACgAAAEYAAABYAAAAAQAAAAcAAAABAAAAAACy
BgEAAAAAAAYAjgVMDAYAOAZMDAYAxgQ5DA8AwAwAAAYA8wTmCQYAXQXmCQYAPgXmCQYAHwbmCQYA
xAXmCQYA3QXmCQYACgXmCQYAJQVzBgoA+AXoAwYA2girAAYAQgr5CA4ArgXJCQYAsg35CAYAjgRM
DA4AegXJCQYAlAb5CAoAdwvoAxIAIQvoAwoAkQroAwYA3wP5CAoAFw7oAwYAqQQ5DAYAiAtsDAYA
hQq0CRYAcwScBhYA2gScBhYAOQSFCQYAogP5CBYAYA65DRYAXA65DRYAVQS5DRYAUQS5DQYA4Air
AAYADAT5CA4A6QtcCg4ABAzJCQYAjQb5CBoAAQDACwYAUwD5CAYAMgr5CB4AKgCYCx4AGgCYC2cA
vg4AAB4AOwCYCwYAfgP5CAYAKQ/mCQAAAAB9AAAAAAABAAEAAQAQAAwJAAAoAAEAAQABABAAmgkA
AEUAAQAFAAEAEABCDQAARQADAAoAAQAQAFINAABFAAgAFQABABAA+AkAAEUADwAkAAEAEAA/CwAA
VQASACsAAQAQADALAABVABIANQABABAAVgsAAFUAEgBFAAEAEAD5DQAAZQASAGUAAQAQAGENAABF
ABcAagABABAACg0AAEUAGABrAAAAEABzDM8MRQAZAHAAAAEQADkNzwx9ABsAdAABAAsC8gABAGoC
9gABAMcB+gABAPMB+gABAK0C+gABAFUC/QABAEAC/QABAHwB+gABAGQB/QABACUCAQEBAMYCBQEB
AJoBBQEBAEcB/QABAJkC/QABAIMC+gABAN0B+gABALEBCAEGAGENCwEGAAoNDwEGAD8LEwEGADAL
FwEGAFYLGwEBAAcOHwEBAAcOHwERAAAJIwERACkEJwERAPQCKwFQIAAAAADGAFYGBgABAFggAAAA
AMYAYQYGAAEAYCAAAAAAxgCDDQYAAQDIIwAAAACGGCIMBgABANAjAAAAAIYIawkvAQEA2CMAAAAA
hgh4CTQBAQDhIwAAAACGCCcOOgECAOkjAAAAAIYIMw4/AQIA8iMAAAAAhhgiDAYAAwD6IwAAAACG
CKoDewADAAIkAAAAAIYIswMQAAMACyQAAAAAhgg0CXsABAATJAAAAACGCD8JEAAEABwkAAAAAIYI
Pg97AAUAJCQAAAAAhghKDxAABQAtJAAAAACGCJ4NRQEGADUkAAAAAIYIpg1KAQYAPiQAAAAAhghM
CkUBBwBGJAAAAACGCFQKSgEHAPIjAAAAAIYYIgwGAAgATyQAAAAAhgglAXsACABXJAAAAACGCDYB
EAAIAGAkAAAAAIYI+wBFAQkAaCQAAAAAhggGAUoBCQBxJAAAAACGCAkKUAEKAHkkAAAAAIYIFwpV
AQoAgiQAAAAAhghjD1sBCwCKJAAAAACGCHAPXwELAJMkAAAAAIYI4AJbAQwAmyQAAAAAhgjqAl8B
DACkJAAAAACGCNsARQENAKwkAAAAAIYI6wBKAQ0AtSQAAAAAhgjuDkUBDgC9JAAAAACGCPUOSgEO
APIjAAAAAIYYIgwGAA8AxiQAAAAAhgiYDnsADwDOJAAAAACGCKEOEAAPANckAAAAAIYIFwl7ABAA
3yQAAAAAhgggCRAAEADoJAAAAACGCBYDZAERAPAkAAAAAIYIHwMBABEA8iMAAAAAhhgiDAYAEgD5
JAAAAACGGCIMigASAAQlAAAAAIYIHwMBABUAEyUAAAAAhggoB2gBFgAqJQAAAACGCCAJEAAXADQl
AAAAAIYI7wdoARgASyUAAAAAhgihDhAAGQBVJQAAAACGCGsIaAEaAGwlAAAAAIYABA8GABsAdCUA
AAAAhgDEDQYAGwB8JQAAAACGAMcNmgAbAPkkAAAAAIYYIgyKABsAhCUAAAAAhgizAxAAHgATJQAA
AACGCKUHaAEfAColAAAAAIYIPwkQACAANCUAAAAAhggRCGgBIQBLJQAAAACGCEoPEAAiAFUlAAAA
AIYIjghoASMAjiUAAAAAhgg2A0oBJACdJQAAAACGCE0HaAElALQlAAAAAIYIUgNKASYAwyUAAAAA
hgh3B2gBJwDaJQAAAACGCA4LEAAoAOQlAAAAAIYIUQhoASkAbCUAAAAAhgAEDwYAKgB0JQAAAACG
AMQNBgAqAHwlAAAAAIYAxw2aACoA+SQAAAAAhhgiDIoAKgCEJQAAAACGCEoJEAAtABMlAAAAAIYI
IwhoAS4AKiUAAAAAhggpCRAALwA0JQAAAACGCP8HaAEwAEslAAAAAIYIMg8QADEAVSUAAAAAhgh7
CGgBMgCOJQAAAACGCCgDSgEzAJ0lAAAAAIYIOAdoATQAtCUAAAAAhghEA0oBNQDDJQAAAACGCGIH
aAE2APslAAAAAIYI0ANtATcA5CUAAAAAhgjQB2gBOAAKJgAAAACGCJUASgE5ABkmAAAAAIYI8AZo
AToAMCYAAAAAhggEAwEAOwA/JgAAAACGCA8HaAE8AFYmAAAAAIYIVg9KAT0AZSYAAAAAhgihCGgB
PgB8JgAAAACGCGADSgE/AIwmAAAAAIYIjAdoAUAApCYAAAAAhgiGAEoBQQC0JgAAAACGCNoGaAFC
AMwmAAAAAIYItQBKAUMA3CYAAAAAhggBB2gBRAD0JgAAAACGCPsKEABFAP8mAAAAAIYINwhoAUYA
FycAAAAAhgi8A20BRwAnJwAAAACGCLUHaAFIAGwlAAAAAIYABA8GAEkAdCUAAAAAhgDEDQYASQB8
JQAAAACGAMcNmgBJAD8nAAAAAIYYIgwGAEkAXycAAAAAxgF1DQYASQBkJwAAAACBABEBBgBJAMAn
AAAAAMYAjA5zAUkAXycAAAAAxgGDDQYATQBvKAAAAACGGCIMfwFNAH4oAAAAAIYYIgx/AU4AjSgA
AAAAhggLD3sATwCzKAAAAACGCL0IewBPANkoAAAAAIYIFg97AE8A/ygAAAAAhghXCXsATwDyIwAA
AACDGCIMBgBPACUpAAAAAJMIhAuFAU8AUSkAAAAAkwgRBIoBTwBYKQAAAACTCB0EjwFPAGApAAAA
AJYI3w2VAVAAZykAAAAAhhgiDAYAUABvKQAAAACRGCgMmgFQAAAAAQBtBgAAAQBtBgAAAQBtBgAA
AQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBt
BgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQB9CwAAAgAUDQAAAwCfCgAAAQBtBgAAAQBtBgAA
AQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQB9CwAAAgAUDQAAAwCfCgAAAQBtBgAAAQBtBgAAAQBt
BgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAA
AQB9CwAAAgAUDQAAAwCfCgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBt
BgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAA
AQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBtBgAAAQBt
BgAAAQBtBgAAAQBtBgAAAQB7DQAAAgAvDAAAAwBtDQAABACfCgAAAQAdDgAAAQAdDgAAAQBtBgkA
IgwBABEAIgwGABkAIgwKACkAIgwQADEAIgwQADkAIgwQAEEAIgwQAEkAIgwQAFEAIgwQAFkAIgwQ
AGEAIgwQAGkAIgwGAIEAIgwGAJEAIgwGAJkAIgwGANEAIgwGAPEAIgwVAMkAVgYGAMkAYQYGAAEB
iAQmAAkB8AorABEB6w0QAAkBYQQyAHEAIgwGABkByAg4ACkBfgo+ACkBJQpFAIkACQRKADkBIgxQ
AEEBrg1XAEkBlw1eAKEA0w1kAMEAbQRqAMEA/A5wAMkAvAB1AHkAcgN7AFEBGAx/AIkAIgwGAKkA
IgyKAKkA8AiUAKkAtQgBAGEBIgwQAKkABA8GAKkAxA0GAKkAxw2aAMkAIgwGAMkAnwCiAMkAKA2p
AMkA/gyvAGkB5wi1AMkA2Q68AHEBqg7CADEBkAPJADEBJQ/SANkAIgzYAPkAIgwGACEAcwCXAikA
ewCXAi4ACwDWAS4AEwDfAS4AGwD+AS4AIwAHAi4AKwAwAi4AMwAwAi4AOwAwAi4AQwAHAi4ASwA2
Ai4AUwAwAi4AWwBNAkEAcwCXAkMAYwCXAkkAewCXAmEAcwCXAmMAawCXAmkAewCXAoEAcwCXAoMA
awCXAokAewCXAqAAcwCXAqEAcwCXAqMAawCXAqkAewCXAsAAcwCXAsEAcwCXAsMAawCXAskAewCX
AuAAcwCXAuEAcwCXAukAewCXAgABcwCXAgEBcwCXAgkBewCXAiEBcwCXAikBewCXAkABcwCXAkEB
cwCXAkkBewCXAmABcwCXAmEBcwCXAmkBewCXAoABcwCXAoEBcwCXAokBewCXAqABcwCXAqEBcwCX
AqMBgwCXAqkBewCXAsABcwCXAsEBcwCXAskBewCXAuABcwCXAuEBcwCXAukBewCXAgACcwCXAgEC
cwCXAgkCewCXAiACcwCXAiECcwCXAikCewCXAkACcwCXAmACcwCXAqACcwCXAsACcwCXAuACcwCX
AgADcwCXAiADcwCXAkADcwCXAmADcwCXAmEDcwCXAoADcwCXAqADcwCXAsADcwCXAuADcwCXAgAE
cwCXAiAEcwCXAkAEcwCXAoAEcwCXAqAEcwCXAsAEcwCXAuAEcwCXAgAFcwCXAiAFcwCXAokIiwD+
AakIiwD+ARsAngADAAEABAADAAUACAAGAA8ABwASAAgAGAAJACQADABAAA0ARAAOAEYAAAB8CZ4B
AAA3DqMBAAC3A6gBAABDCagBAABOD6gBAACqDawBAABYCqwBAAA6AagBAAAKAawBAAAbCrEBAAB0
D7YBAADuArYBAADvAKwBAAD5DqwBAADpDqgBAAAkCagBAAAjA7oBAAAjA7oBAAAsB74BAAAkCagB
AADzB74BAADpDqgBAABvCL4BAAC3A6gBAACpB74BAABDCagBAAAVCL4BAABOD6gBAACSCL4BAAA6
A6wBAABRB74BAABWA6wBAAB7B74BAAASC6gBAABVCL4BAABiCagBAAAnCL4BAAAtCagBAAADCL4B
AAA2D6gBAAB/CL4BAAAsA6wBAAA8B74BAABIA6wBAABmB74BAADUA8IBAADUB74BAACZAKwBAAD0
Br4BAAAIA7oBAAATB74BAABaD6wBAAClCL4BAABkA6wBAACQB74BAACKAKwBAADeBr4BAAC5AKwB
AAAFB74BAAD/CqgBAAA7CL4BAADAA8IBAAC5B74BAAAeD6gBAADBCKgBAAAaD6gBAABbCagBAACI
C8cBAAAxBMwBAADjDdEBAgAFAAMAAQAGAAMAAgAHAAUAAQAIAAUAAgAKAAcAAQALAAcAAgAMAAkA
AQANAAkAAgAOAAsAAQAPAAsAAgAQAA0AAQARAA0AAgASAA8AAQATAA8AAgAVABEAAQAWABEAAgAX
ABMAAQAYABMAAgAZABUAAQAaABUAAgAbABcAAQAcABcAAgAdABkAAQAeABkAAgAfABsAAQAgABsA
AgAhAB0AAQAiAB0AAgAkAB8AAQAlAB8AAgAmACEAAQAnACEAAgAoACMAAQApACMAAQAsACUAAQAt
ACcAAQAuACkAAQAvACsAAQAwAC0AAQAxAC8AAQA2ADEAAQA3ADMAAQA4ADUAAQA5ADcAAQA6ADkA
AQA7ADsAAQA8AD0AAQA9AD8AAQA+AEEAAQA/AEMAAQBAAEUAAQBBAEcAAQBGAEkAAQBHAEsAAQBI
AE0AAQBJAE8AAQBKAFEAAQBLAFMAAQBMAFUAAQBNAFcAAQBOAFkAAQBPAFsAAQBQAF0AAQBRAF8A
AQBSAGEAAQBTAGMAAQBUAGUAAQBVAGcAAQBWAGkAAQBXAGsAAQBYAG0AAQBZAG8AAQBaAHEAAQBb
AHMAAQBcAHUAAQBdAHcAAQBeAHkAAQBfAHsAAQBgAH0AAQBhAH8AAgBsAIEAAgBtAIMAAgBuAIUA
AgBvAIcAAgBxAIkAAgByAIsAAQBzAIsAAgB0AI0ABIAAAAEAAAAAAAAAAAAAAAAAWQAAAAQAAAAA
AAAAAAAAAOAA0gAAAAAADwAAAAAAAAAAAAAA6QA/DgAAAAAEAAAAAAAAAAAAAADgAMkJAAAAAA8A
AAAAAAAAAAAAAOkAaw4AAAAABAAAAAAAAAAAAAAA4AD5CAAAAAAPAAAAAAAAAAAAAADpAMwKAAAA
AA8AAAAAAAAAAAAAAOkAqQoAAAAAAAAAAAEAAAB9DAAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURh
dGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRl
eHQxMDAASW50MzIAU0NfNzdjMDU2NzlkZDg4NDlhOWEyZGY1NmQwOGU1NDc2MTkAPE1vZHVsZT4A
c2V0X0ZlZWxzTGlrZUMAc2V0X1RlbXBDAEdldE91dHB1dElEAFN5c3RlbS5JTwBzZXRfVVYAZ2V0
X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAGdldF9mZWVsc2xpa2VfYwBzZXRfZmVlbHNsaWtl
X2MAZ2V0X3RlbXBfYwBzZXRfdGVtcF9jAE1hcmtPdXRwdXRzRmluaXNoZWQAZ2V0X2xhc3RfdXBk
YXRlZABzZXRfbGFzdF91cGRhdGVkADxmZWVsc2xpa2VfYz5rX19CYWNraW5nRmllbGQAPHRlbXBf
Yz5rX19CYWNraW5nRmllbGQAPGxhc3RfdXBkYXRlZD5rX19CYWNraW5nRmllbGQAPGNsb3VkPmtf
X0JhY2tpbmdGaWVsZAA8Y29kZT5rX19CYWNraW5nRmllbGQAPG5hbWU+a19fQmFja2luZ0ZpZWxk
ADxpY29uPmtfX0JhY2tpbmdGaWVsZAA8cmVnaW9uPmtfX0JhY2tpbmdGaWVsZAA8bG9jYXRpb24+
a19fQmFja2luZ0ZpZWxkADxjb25kaXRpb24+a19fQmFja2luZ0ZpZWxkADxsb24+a19fQmFja2lu
Z0ZpZWxkADxsYXQ+a19fQmFja2luZ0ZpZWxkADxjdXJyZW50PmtfX0JhY2tpbmdGaWVsZAA8dGV4
dD5rX19CYWNraW5nRmllbGQAPHV2PmtfX0JhY2tpbmdGaWVsZAA8Y291bnRyeT5rX19CYWNraW5n
RmllbGQAPGh1bWlkaXR5PmtfX0JhY2tpbmdGaWVsZABnZXRfY2xvdWQAc2V0X2Nsb3VkAGRlZmF1
bHRJbnN0YW5jZQBzZXRfQ29uZGl0aW9uQ29kZQBnZXRfY29kZQBzZXRfY29kZQBzZXRfTG9uZ2l0
dWRlAHNldF9sb25naXR1ZGUAc2V0X0xhdHRpdHVkZQBzZXRfbGF0dGl0dWRlAHNldF9DbG91ZENv
dmVyYWdlAGdldF9NZXNzYWdlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAENv
bnNvbGUAZ2V0X25hbWUAc2V0X25hbWUAc2V0X0FQSUNhbGxEYXRlVGltZQBzZXRfT2JzZXJ2YXRp
b25EYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBHZXRUeXBlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBIdHRwV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UAUGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUA
V3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBEYXRhTWVtYmVyQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUARGF0YUNvbnRyYWN0QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0
dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRy
aWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFN0cmluZwBEZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ183N2MwNTY3OWRkODg0
OWE5YTJkZjU2ZDA4ZTU0NzYxOS5kbGwAc2V0X0ZlZWxzTGlrZUNfSXNOdWxsAHNldF9UZW1wQ19J
c051bGwAc2V0X1VWX0lzTnVsbABzZXRfQ29uZGl0aW9uQ29kZV9Jc051bGwAc2V0X2NvZGVfSXNO
dWxsAHNldF9Mb25naXR1ZGVfSXNOdWxsAHNldF9sb25naXR1ZGVfSXNOdWxsAHNldF9MYXR0aXR1
ZGVfSXNOdWxsAHNldF9sYXR0aXR1ZGVfSXNOdWxsAHNldF9DbG91ZENvdmVyYWdlX0lzTnVsbABz
ZXRfbmFtZV9Jc051bGwAc2V0X0FQSUNhbGxEYXRlVGltZV9Jc051bGwAc2V0X09ic2VydmF0aW9u
RGF0ZVRpbWVfSXNOdWxsAHNldF9pY29uX0lzTnVsbABzZXRfUmVnaW9uX0lzTnVsbABzZXRfcmVn
aW9uX0lzTnVsbABzZXRfTG9jYXRpb25fSXNOdWxsAHNldF9Mb2NhdGlvbkxvb2t1cF9Jc051bGwA
c2V0X2xvY2F0aW9ubG9va3VwX0lzTnVsbABzZXRfdGV4dF9Jc051bGwAc2V0X0NvdW50cnlfSXNO
dWxsAHNldF9jb3VudHJ5X0lzTnVsbABzZXRfSHVtaWRpdHlfSXNOdWxsAFNldE51bGwAZ2V0X0FQ
SVVybABHZXRSZXNwb25zZVN0cmVhbQBNZW1vcnlTdHJlYW0AZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lz
dGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AZ2V0X2ljb24Ac2V0X2ljb24Ac2V0X1JlZ2lvbgBn
ZXRfcmVnaW9uAHNldF9yZWdpb24Ac2V0X0xvY2F0aW9uAGdldF9XZWF0aGVyTG9jYXRpb24AZ2V0
X2xvY2F0aW9uAHNldF9sb2NhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBDdXJyZW50V2VhdGhl
ck9ic2VydmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AV2VhdGhlckNvbmRpdGlvbgBnZXRfY29uZGl0aW9uAHNl
dF9jb25kaXRpb24Ac2V0X1Bvc2l0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X2xv
bgBzZXRfbG9uAFN5c3RlbS5SdW50aW1lLlNlcmlhbGl6YXRpb24uSnNvbgBDb3B5VG8AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50
aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABDcmVhdGVIdHRwAHNl
dF9Mb2NhdGlvbkxvb2t1cABzZXRfbG9jYXRpb25sb29rdXAAUGlwZWxpbmVCdWZmZXIATG9jYXRp
b25CdWZmZXIAV2VhdGhlckNvbmRpdGlvbkJ1ZmZlcgBDdXJyZW50V2VhdGhlck9ic2VydmF0aW9u
c0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUu
V3JhcHBlcgBEYXRhQ29udHJhY3RKc29uU2VyaWFsaXplcgBYbWxPYmplY3RTZXJpYWxpemVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfNzdjMDU2NzlkZDg4
NDlhOWEyZGY1NmQwOGU1NDc2MTkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNDXzc3YzA1Njc5ZGQ4ODQ5YTlhMmRmNTZkMDhlNTQ3NjE5LlByb3BlcnRpZXMA
Z2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBMb2NhdGlvbkRldGFpbHMAV2VhdGhlckRldGFpbHMAQ29ubmVjdGlvbnMAQnVm
ZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AGdldF9sYXQAc2V0
X2xhdABSZWFkT2JqZWN0AFN5c3RlbS5OZXQAU2V0RW5kT2ZSb3dzZXQAb3BfSW1wbGljaXQAZ2V0
X0RlZmF1bHQAc2V0X1VzZXJBZ2VudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQAZ2V0X2N1cnJlbnQAc2V0X2N1cnJlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABIdHRwV2ViUmVxdWVzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQ
cmltZU91dHB1dABnZXRfdGV4dABzZXRfdGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENv
bXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AGdldF91dgBzZXRfdXYAZ2V0
X05vdwBBZGRSb3cAZ2V0X0FQSUtleQBnZXRfRnVsbEFQSUtleQBnZXRfQXNzZW1ibHkAc2V0X0Nv
dW50cnkAZ2V0X2NvdW50cnkAc2V0X2NvdW50cnkAc2V0X0h1bWlkaXR5AGdldF9odW1pZGl0eQBz
ZXRfaHVtaWRpdHkAAAAAADtSAGgAeQBzACAAYQB0ACAAUgBoAHkAcwBTAGUAcgB2AEEAYwBjAEAA
ZwBtAGEAaQBsAC4AYwBvAG0AAAMtAAEdUABhAHIAcwBlACAAQQBQAEkAIABkAGEAdABhAACAm0kA
cwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAg
AHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAA
dABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAIVcAZQBhAHQAaABlAHIAQwBv
AG4AZABpAHQAaQBvAG4AABFMAG8AYwBhAHQAaQBvAG4AADVDAHUAcgByAGUAbgB0AFcAZQBhAHQA
aABlAHIATwBiAHMAZQByAHYAYQB0AGkAbwBuAHMAAA1BAFAASQBLAGUAeQAADUEAUABJAFUAcgBs
AAAVRgB1AGwAbABBAFAASQBLAGUAeQAAH1cAZQBhAHQAaABlAHIATABvAGMAYQB0AGkAbwBuAABx
UwBDAF8ANwA3AGMAMAA1ADYANwA5AGQAZAA4ADgANAA5AGEAOQBhADIAZABmADUANgBkADAAOABl
ADUANAA3ADYAMQA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
ALUG7vRhzXRNgm9RnfLwxyEABCABAQgDIAABBSABARERBCABAQ4FIAEBEXUKBwUOEjkSDBI9AgQA
AQEOBgABEoCJDgUgABKAjQUgABKAlQYgAQESgJUEIAEBCgUgABKAmQYgAQESgJkGIAEcEoCVBQAB
Dh0OBQABEVEGBQABEWEOBAAAEWEFIAASgKkDIAAOCiAGAQgODg4IEAIJIAMBElkdCBJdBSACAQgc
AyAAAgMHAQgGAAIIEl0OBSABHQgIBSAAEoC1BiABEoC5HAUAABKAvQYgARwSgMEIAAESgJkRgMUF
IAASgMkHIAIBDhKAyQi3elxWGTTgiQiJhF3NgIDMkQMGEhADBhIUAgYOAwYRUQMGEhgCBgYCBggD
BhIsAwYSMAMGEhwDBhIgAwYSJAMGEmUDBhJtAwYScQMGEjgEIAASEAUgAQESEAQgABIUBSABARIU
BCAAEVEFIAEBEVEEIAASGAUgAQESGAMgAAYEIAEBBgMgAAgEIAEBAgUgAQERYQsgBAEIHQgdElkS
XQUgAQESZQQAABJtBAAAEnEFAAEBEnEEAAASOAMAAAEEKAASEAQoABIUAygADgQoABFRBCgAEhgD
KAAGAygACAMoAAIEKAARYQQIABJtBAgAEnEECAASOAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNzdjMDU2NzlkZDg4NDlhOWEyZGY1NmQwOGU1
NDc2MTkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAABQUgAAAAAAAAAAAABqUgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFIA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAOwDAAAAAAAA
AAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAA
AAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEA
AQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcANwBjADAA
NQA2ADcAOQBkAGQAOAA4ADQAOQBhADkAYQAyAGQAZgA1ADYAZAAwADgAZQA1ADQANwA2ADEAOQAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANwA3AGMAMAA1ADYANwA5AGQAZAA4ADgANAA5
AGEAOQBhADIAZABmADUANgBkADAAOABlADUANAA3ADYAMQA5AC4AZABsAGwAAABIABIAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAy
ADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8A
cgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA3ADcAYwAwADUANgA3ADkAZABk
ADgAOAA0ADkAYQA5AGEAMgBkAGYANQA2AGQAMAA4AGUANQA0ADcANgAxADkALgBkAGwAbAAAAGgA
JAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANwA3AGMAMAA1ADYANwA5AGQAZAA4
ADgANAA5AGEAOQBhADIAZABmADUANgBkADAAOABlADUANAA3ADYAMQA5AAAANAAIAAEAUAByAG8A
ZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAB8MgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_77c05679dd8849a9a2df56d08e547619</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::APIKey,$Package::APIUrl,$Package::FullAPIKey,$Package::WeatherLocation</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">41</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition]"
                  hasSideEffects="true"
                  name="WeatherCondition">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[code]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[code]"
                      name="code" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[icon]"
                      dataType="wstr"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[icon]"
                      name="icon" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[text]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition].Columns[text]"
                      name="text" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location]"
                  hasSideEffects="true"
                  name="Location">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[name]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[name]"
                      name="name" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[region]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[region]"
                      name="region" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[country]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[country]"
                      name="country" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[longitude]"
                      dataType="numeric"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[longitude]"
                      name="longitude"
                      precision="4" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[lattitude]"
                      dataType="numeric"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[lattitude]"
                      name="lattitude"
                      precision="4" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[location_lookup]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location].Columns[location_lookup]"
                      name="location_lookup" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations]"
                  hasSideEffects="true"
                  name="CurrentWeatherObservations">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Location]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Location]"
                      name="Location" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Region]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Region]"
                      name="Region" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Country]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Longitude]"
                      dataType="decimal"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Lattitude]"
                      dataType="decimal"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Lattitude]"
                      name="Lattitude" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[ObservationDateTime]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[ObservationDateTime]"
                      name="ObservationDateTime" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[TempC]"
                      dataType="decimal"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[TempC]"
                      name="TempC" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[ConditionCode]"
                      dataType="i4"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[ConditionCode]"
                      name="ConditionCode" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Humidity]"
                      dataType="numeric"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[Humidity]"
                      name="Humidity"
                      precision="18" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[CloudCoverage]"
                      dataType="numeric"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[CloudCoverage]"
                      name="CloudCoverage"
                      precision="18" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[FeelsLikeC]"
                      dataType="decimal"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[FeelsLikeC]"
                      name="FeelsLikeC" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[UV]"
                      dataType="decimal"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[UV]"
                      name="UV" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[LocationLookup]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[LocationLookup]"
                      name="LocationLookup" />
                    <outputColumn
                      refId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[APICallDateTime]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations].Columns[APICallDateTime]"
                      name="APICallDateTime" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get latest weather data and check for new values.Paths[CurrentWeatherObservations]"
              endId="Package\Get latest weather data and check for new values\Raw File Destination.Inputs[Raw File Destination Input]"
              name="CurrentWeatherObservations"
              startId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[CurrentWeatherObservations]" />
            <path
              refId="Package\Get latest weather data and check for new values.Paths[Location]"
              endId="Package\Get latest weather data and check for new values\Check existing location.Inputs[Lookup Input]"
              name="Location"
              startId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[Location]" />
            <path
              refId="Package\Get latest weather data and check for new values.Paths[Lookup No Match Output]"
              endId="Package\Get latest weather data and check for new values\Save new location.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Get latest weather data and check for new values\Check existing location.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Get latest weather data and check for new values.Paths[Lookup No Match Output1]"
              endId="Package\Get latest weather data and check for new values\Save new condition.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Get latest weather data and check for new values\Check existing condition.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Get latest weather data and check for new values.Paths[OLE DB Destination Error Output]"
              endId="Package\Get latest weather data and check for new values\Save failed location rows.Inputs[Flat File Destination Input]"
              name="OLE DB Destination Error Output"
              startId="Package\Get latest weather data and check for new values\Save new location.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Get latest weather data and check for new values.Paths[OLE DB Destination Error Output1]"
              endId="Package\Get latest weather data and check for new values\Save failed condition rows.Inputs[Flat File Destination Input]"
              name="OLE DB Destination Error Output"
              startId="Package\Get latest weather data and check for new values\Save new condition.Outputs[OLE DB Destination Error Output]" />
            <path
              refId="Package\Get latest weather data and check for new values.Paths[WeatherCondition]"
              endId="Package\Get latest weather data and check for new values\Check existing condition.Inputs[Lookup Input]"
              name="WeatherCondition"
              startId="Package\Get latest weather data and check for new values\WeatherAPI Get Latest.Outputs[WeatherCondition]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Save to factWeatherObservation"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{84336168-DD12-468D-99E0-6240DD5E20D3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Save to factWeatherObservation"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Save to factWeatherObservation\Add ObservationDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add ObservationDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Save to factWeatherObservation\Add ObservationDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Add ObservationDate.Inputs[Derived Column Input].Columns[ObservationDateTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ObservationDateTime"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ObservationDateTime]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Add ObservationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Output].Columns[ObservationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Output].Columns[ObservationDate]"
                      name="ObservationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_DBDATE)#{Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ObservationDateTime]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_DBDATE)ObservationDateTime</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Add ObservationDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save to factWeatherObservation\Flat File Destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="3081"
              name="Flat File Destination"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save to factWeatherObservation\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocationError]"
                  connectionManagerRefId="Package.ConnectionManagers[LocationError]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].Columns[Location]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Location"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[name]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Location]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].Columns[Region]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Region"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[region]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Region]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].Columns[Country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="150"
                      cachedName="Country"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[country]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Country]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].Columns[Longitude]"
                      cachedDataType="decimal"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[longitude]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].Columns[Lattitude]"
                      cachedDataType="decimal"
                      cachedName="Lattitude"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[lattitude]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Lattitude]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[name]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="name" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[region]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="region" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[country]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="country" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[longitude]"
                      dataType="numeric"
                      name="longitude"
                      precision="4" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[lattitude]"
                      dataType="numeric"
                      name="lattitude"
                      precision="4" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[location_lookup]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      name="location_lookup" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Save to factWeatherObservation\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[dimLocation]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[dimLocation]) [refTable]
where [refTable].[location_lookup] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="location_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="name" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="region" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="country" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="lattitude" dataType="DT_NUMERIC" length="0" precision="18" scale="0" codePage="0"/&gt;&lt;referenceColumn name="longitude" dataType="DT_NUMERIC" length="0" precision="18" scale="0" codePage="0"/&gt;&lt;referenceColumn name="location_lookup" dataType="DT_STR" length="250" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[LocationLookup]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save to factWeatherObservation\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save to factWeatherObservation\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Lookup.Inputs[Lookup Input].Columns[LocationLookup]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="250"
                      cachedName="LocationLookup"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[LocationLookup]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">location_lookup</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Match Output].Columns[location_id]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Match Output].Columns[location_id]"
                      name="location_id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">location_id</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save to factWeatherObservation\Lookup condition code"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup condition code"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[dimCondition]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[dimCondition]) [refTable]
where [refTable].[condition_id] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="condition_id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="text" dataType="DT_STR" length="150" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="icon" dataType="DT_WSTR" length="150" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ConditionCode]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save to factWeatherObservation\Lookup condition code.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save to factWeatherObservation\Lookup condition code.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Lookup condition code.Inputs[Lookup Input].Columns[condition_id]"
                      cachedDataType="i4"
                      cachedName="ConditionCode"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ConditionCode]"
                      name="condition_id"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">condition_id</property>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">condition_id</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Lookup condition code.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Lookup condition code.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Lookup condition code.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save to factWeatherObservation\Raw File Source"
              componentClassID="Microsoft.RawSource"
              contactInfo="Reads raw data from a flat file that was previously written by the Raw File destination. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers.;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Reads raw data from a flat file that was previously written by the Raw File destination. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers."
              name="Raw File Source">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the file."
                  name="AccessMode"
                  typeConverter="AccessMode">1</property>
                <property
                  dataType="System.Null"
                  description="Output file name"
                  name="FileName"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.NonValidatingFileNameEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
                <property
                  dataType="System.String"
                  description="Name of the variable that contains the file name"
                  name="FileNameVariable">$Package::TempFileLocation</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output]"
                  name="Raw File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Location]"
                      codePage="1252"
                      dataType="str"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Location]"
                      length="150"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Location]"
                      name="Location" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Region]"
                      codePage="1252"
                      dataType="str"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Region]"
                      length="150"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Region]"
                      name="Region" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Country]"
                      codePage="1252"
                      dataType="str"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Country]"
                      length="150"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Longitude]"
                      dataType="decimal"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Longitude]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Lattitude]"
                      dataType="decimal"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Lattitude]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Lattitude]"
                      name="Lattitude" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[TempC]"
                      dataType="decimal"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[TempC]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[TempC]"
                      name="TempC" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ConditionCode]"
                      dataType="i4"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ConditionCode]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ConditionCode]"
                      name="ConditionCode" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Humidity]"
                      dataType="numeric"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Humidity]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Humidity]"
                      name="Humidity"
                      precision="18" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[CloudCoverage]"
                      dataType="numeric"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[CloudCoverage]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[CloudCoverage]"
                      name="CloudCoverage"
                      precision="18" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[FeelsLikeC]"
                      dataType="decimal"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[FeelsLikeC]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[FeelsLikeC]"
                      name="FeelsLikeC" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[UV]"
                      dataType="decimal"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[UV]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[UV]"
                      name="UV" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ObservationDateTime]"
                      dataType="dbTimeStamp"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ObservationDateTime]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ObservationDateTime]"
                      name="ObservationDateTime" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[LocationLookup]"
                      codePage="1252"
                      dataType="str"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[LocationLookup]"
                      length="250"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[LocationLookup]"
                      name="LocationLookup" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[APICallDateTime]"
                      dataType="dbTimeStamp"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[APICallDateTime]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[APICallDateTime]"
                      name="APICallDateTime" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Location]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Region]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="Region" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Country]"
                      codePage="1252"
                      dataType="str"
                      length="150"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Longitude]"
                      dataType="decimal"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Lattitude]"
                      dataType="decimal"
                      name="Lattitude" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[TempC]"
                      dataType="decimal"
                      name="TempC" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ConditionCode]"
                      dataType="i4"
                      name="ConditionCode" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Humidity]"
                      dataType="numeric"
                      name="Humidity"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[CloudCoverage]"
                      dataType="numeric"
                      name="CloudCoverage"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[FeelsLikeC]"
                      dataType="decimal"
                      name="FeelsLikeC" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[UV]"
                      dataType="decimal"
                      name="UV" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ObservationDateTime]"
                      dataType="dbTimeStamp"
                      name="ObservationDateTime" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[LocationLookup]"
                      codePage="1252"
                      dataType="str"
                      length="250"
                      name="LocationLookup" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[APICallDateTime]"
                      dataType="dbTimeStamp"
                      name="APICallDateTime" />
                  </externalMetadataColumns>
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Save to factWeatherObservation\Save to factWeatherObservation"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Save to factWeatherObservation"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[factWeatherObservation]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[zotac.WeatherAPI_DW.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[ConditionCode]"
                      cachedDataType="i4"
                      cachedName="ConditionCode"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[condition_id]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ConditionCode]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[UV]"
                      cachedDataType="decimal"
                      cachedName="UV"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[uv]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[UV]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[ObservationDate]"
                      cachedDataType="dbDate"
                      cachedName="ObservationDate"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[observation_date]"
                      lineageId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Output].Columns[ObservationDate]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[TempC]"
                      cachedDataType="decimal"
                      cachedName="TempC"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[temp_c]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[TempC]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[FeelsLikeC]"
                      cachedDataType="decimal"
                      cachedName="FeelsLikeC"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[feelslike_c]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[FeelsLikeC]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[Humidity]"
                      cachedDataType="numeric"
                      cachedName="Humidity"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[humidty]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[Humidity]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[CloudCoverage]"
                      cachedDataType="numeric"
                      cachedName="CloudCoverage"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[cloud]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[CloudCoverage]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[ObservationDateTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="ObservationDateTime"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[observation_datetime]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[ObservationDateTime]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[location_id]"
                      cachedDataType="i4"
                      cachedName="location_id"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[location_id]"
                      lineageId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Match Output].Columns[location_id]" />
                    <inputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].Columns[APICallDateTime]"
                      cachedDataType="dbTimeStamp"
                      cachedName="APICallDateTime"
                      externalMetadataColumnId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[api_call_datetime]"
                      lineageId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output].Columns[APICallDateTime]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[observation_id]"
                      dataType="i4"
                      name="observation_id" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[observation_date]"
                      dataType="dbDate"
                      name="observation_date" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[location_id]"
                      dataType="i4"
                      name="location_id" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[condition_id]"
                      dataType="i4"
                      name="condition_id" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[api_call]"
                      dataType="wstr"
                      length="250"
                      name="api_call" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[api_call_result]"
                      dataType="nText"
                      name="api_call_result" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[temp_c]"
                      dataType="numeric"
                      name="temp_c"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[feelslike_c]"
                      dataType="numeric"
                      name="feelslike_c"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[humidty]"
                      dataType="i4"
                      name="humidty" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[cloud]"
                      dataType="i4"
                      name="cloud" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[uv]"
                      dataType="numeric"
                      name="uv"
                      precision="1" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[observation_datetime]"
                      dataType="dbTimeStamp"
                      name="observation_datetime" />
                    <externalMetadataColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input].ExternalColumns[api_call_datetime]"
                      dataType="dbTimeStamp"
                      name="api_call_datetime" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Save to factWeatherObservation.Paths[Derived Column Output]"
              endId="Package\Save to factWeatherObservation\Save to factWeatherObservation.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Save to factWeatherObservation\Add ObservationDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Save to factWeatherObservation.Paths[Lookup Match Output]"
              endId="Package\Save to factWeatherObservation\Lookup.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\Save to factWeatherObservation\Lookup condition code.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Save to factWeatherObservation.Paths[Lookup Match Output1]"
              endId="Package\Save to factWeatherObservation\Add ObservationDate.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Save to factWeatherObservation.Paths[Lookup No Match Output]"
              endId="Package\Save to factWeatherObservation\Flat File Destination.Inputs[Flat File Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Save to factWeatherObservation\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Save to factWeatherObservation.Paths[Raw File Source Output]"
              endId="Package\Save to factWeatherObservation\Lookup condition code.Inputs[Lookup Input]"
              name="Raw File Source Output"
              startId="Package\Save to factWeatherObservation\Raw File Source.Outputs[Raw File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A8A3244A-5606-40B4-BF0A-2647FF05172F}"
      DTS:From="Package\Get latest weather data and check for new values"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Save to factWeatherObservation" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="319,42"
          Id="Package\Get latest weather data and check for new values"
          TopLeft="661.5,292.5" />
        <NodeLayout
          Size="238,42"
          Id="Package\Save to factWeatherObservation"
          TopLeft="731,421" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="821,334.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29,86.5"
              Start="0,0"
              End="29,79">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.25"
                    Point2="0,43.25"
                    Point3="4,43.25" />
                  <mssgle:LineSegment
                    End="25,43.25" />
                  <mssgle:CubicBezierSegment
                    Point1="25,43.25"
                    Point2="29,43.25"
                    Point3="29,47.25" />
                  <mssgle:LineSegment
                    End="29,79" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get latest weather data and check for new values">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="191,42"
          Id="Package\Get latest weather data and check for new values\Check existing location"
          TopLeft="609,299" />
        <NodeLayout
          Size="207,42"
          Id="Package\Get latest weather data and check for new values\Save failed condition rows"
          TopLeft="185,539" />
        <NodeLayout
          Size="174,42"
          Id="Package\Get latest weather data and check for new values\Save new condition"
          TopLeft="204,425" />
        <NodeLayout
          Size="168,42"
          Id="Package\Get latest weather data and check for new values\Save new location"
          TopLeft="609,420" />
        <NodeLayout
          Size="192,42"
          Id="Package\Get latest weather data and check for new values\WeatherAPI Get Latest"
          TopLeft="334.333333333333,150.805555555556" />
        <NodeLayout
          Size="201,42"
          Id="Package\Get latest weather data and check for new values\Save failed location rows"
          TopLeft="633,534" />
        <NodeLayout
          Size="198,42"
          Id="Package\Get latest weather data and check for new values\Check existing condition"
          TopLeft="181,306" />
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[WeatherCondition]"
          TopLeft="384.333333333333,192.805555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-104.333333333333,113.194444444444"
              Start="0,0"
              End="-104.333333333333,105.694444444444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.765220700152" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.765220700152"
                    Point2="0,38.765220700152"
                    Point3="-4,38.765220700152" />
                  <mssgle:LineSegment
                    End="-100.333333333333,38.765220700152" />
                  <mssgle:CubicBezierSegment
                    Point1="-100.333333333333,38.765220700152"
                    Point2="-104.333333333333,38.765220700152"
                    Point3="-104.333333333333,42.765220700152" />
                  <mssgle:LineSegment
                    End="-104.333333333333,105.694444444444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-92.1837760416665,43.765220700152,80.03421875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[OLE DB Destination Error Output1]"
          TopLeft="289.75,467">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.20890625,26.533203125,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[OLE DB Destination Error Output]"
          TopLeft="693,462">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40.5,72"
              Start="0,0"
              End="40.5,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32"
                    Point2="0,36"
                    Point3="4,36" />
                  <mssgle:LineSegment
                    End="36.5,36" />
                  <mssgle:CubicBezierSegment
                    Point1="36.5,36"
                    Point2="40.5,36"
                    Point3="40.5,40" />
                  <mssgle:LineSegment
                    End="40.5,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-52.95890625,41,146.4178125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[Lookup No Match Output]"
          TopLeft="704.5,341">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,79"
              Start="0,0"
              End="-11.5,71.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.5"
                    Point2="0,39.5"
                    Point3="-4,39.5" />
                  <mssgle:LineSegment
                    End="-7.5,39.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,39.5"
                    Point2="-11.5,39.5"
                    Point3="-11.5,43.5" />
                  <mssgle:LineSegment
                    End="-11.5,71.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-61.55638671875,44.5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[Location]"
          TopLeft="476.333333333333,192.805555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="228.166666666667,106.194444444444"
              Start="0,0"
              End="228.166666666667,98.694444444444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.3679604261795" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.3679604261795"
                    Point2="0,36.3679604261795"
                    Point3="4,36.3679604261795" />
                  <mssgle:LineSegment
                    End="224.166666666667,36.3679604261795" />
                  <mssgle:CubicBezierSegment
                    Point1="224.166666666667,36.3679604261795"
                    Point2="228.166666666667,36.3679604261795"
                    Point3="228.166666666667,40.3679604261795" />
                  <mssgle:LineSegment
                    End="228.166666666667,98.694444444444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="95.3113997395835,41.3679604261795,37.5438671875,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[Lookup No Match Output1]"
          TopLeft="280,348">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11,77"
              Start="0,0"
              End="11,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.5"
                    Point2="0,38.5"
                    Point3="4,38.5" />
                  <mssgle:LineSegment
                    End="7,38.5" />
                  <mssgle:CubicBezierSegment
                    Point1="7,38.5"
                    Point2="11,38.5"
                    Point3="11,42.5" />
                  <mssgle:LineSegment
                    End="11,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-50.30638671875,43.5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,42"
          Id="Package\Get latest weather data and check for new values\Raw File Destination"
          TopLeft="417,545" />
        <EdgeLayout
          Id="Package\Get latest weather data and check for new values.Paths[CurrentWeatherObservations]"
          TopLeft="431.333333333333,192.805555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.666666666667,352.194444444444"
              Start="0,0"
              End="75.666666666667,344.694444444444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,172.097222222222" />
                  <mssgle:CubicBezierSegment
                    Point1="0,172.097222222222"
                    Point2="0,176.097222222222"
                    Point3="4,176.097222222222" />
                  <mssgle:LineSegment
                    End="71.666666666667,176.097222222222" />
                  <mssgle:CubicBezierSegment
                    Point1="71.666666666667,176.097222222222"
                    Point2="75.666666666667,176.097222222222"
                    Point3="75.666666666667,180.097222222222" />
                  <mssgle:LineSegment
                    End="75.666666666667,344.694444444444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.6817643229165,181.097222222222,129.0301953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get latest weather data and check for new values\Check existing location">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[dimLocation]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get latest weather data and check for new values\Save new location">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get latest weather data and check for new values\Save new condition">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get latest weather data and check for new values\Check existing condition">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[dimCondition]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Save to factWeatherObservation">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Save to factWeatherObservation\Raw File Source"
          TopLeft="635,60" />
        <NodeLayout
          Size="189,42"
          Id="Package\Save to factWeatherObservation\Lookup condition code"
          TopLeft="628,191" />
        <EdgeLayout
          Id="Package\Save to factWeatherObservation.Paths[Raw File Source Output]"
          TopLeft="718.75,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89"
              Start="0,0"
              End="0,81.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="184,42"
          Id="Package\Save to factWeatherObservation\Add ObservationDate"
          TopLeft="618,481" />
        <NodeLayout
          Size="238,42"
          Id="Package\Save to factWeatherObservation\Save to factWeatherObservation"
          TopLeft="578,598" />
        <NodeLayout
          Size="176,42"
          Id="Package\Save to factWeatherObservation\Flat File Destination"
          TopLeft="1107,296" />
        <EdgeLayout
          Id="Package\Save to factWeatherObservation.Paths[Derived Column Output]"
          TopLeft="710,523">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13,75"
              Start="0,0"
              End="-13,67.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.5"
                    Point2="0,37.5"
                    Point3="-4,37.5" />
                  <mssgle:LineSegment
                    End="-9,37.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-9,37.5"
                    Point2="-13,37.5"
                    Point3="-13,41.5" />
                  <mssgle:LineSegment
                    End="-13,67.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="115,42"
          Id="Package\Save to factWeatherObservation\Lookup"
          TopLeft="631,309" />
        <EdgeLayout
          Id="Package\Save to factWeatherObservation.Paths[Lookup Match Output]"
          TopLeft="722.5,233">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34,76"
              Start="0,0"
              End="-34,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34"
                    Point2="0,38"
                    Point3="-4,38" />
                  <mssgle:LineSegment
                    End="-30,38" />
                  <mssgle:CubicBezierSegment
                    Point1="-30,38"
                    Point2="-34,38"
                    Point3="-34,42" />
                  <mssgle:LineSegment
                    End="-34,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-65.19138671875,43,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save to factWeatherObservation.Paths[Lookup Match Output1]"
          TopLeft="688.5,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.5,130"
              Start="0,0"
              End="21.5,122.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61" />
                  <mssgle:CubicBezierSegment
                    Point1="0,61"
                    Point2="0,65"
                    Point3="4,65" />
                  <mssgle:LineSegment
                    End="17.5,65" />
                  <mssgle:CubicBezierSegment
                    Point1="17.5,65"
                    Point2="21.5,65"
                    Point3="21.5,69" />
                  <mssgle:LineSegment
                    End="21.5,122.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-37.44138671875,70,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Save to factWeatherObservation.Paths[Lookup No Match Output]"
          TopLeft="746,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="361,-13"
              Start="0,0"
              End="353.5,-13">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="176.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="176.5,0"
                    Point2="180.5,0"
                    Point3="180.5,-4" />
                  <mssgle:LineSegment
                    End="180.5,-9" />
                  <mssgle:CubicBezierSegment
                    Point1="180.5,-9"
                    Point2="180.5,-13"
                    Point3="184.5,-13" />
                  <mssgle:LineSegment
                    End="353.5,-13" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="124.69361328125,1,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Save to factWeatherObservation\Lookup condition code">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[dimCondition]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Save to factWeatherObservation\Save to factWeatherObservation">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Save to factWeatherObservation\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[dimLocation]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>